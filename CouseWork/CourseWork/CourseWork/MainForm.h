#pragma once
#include <string.h>//подключение библиотеки string.h дл€ работы с строками
#include <fstream>//подключение библиотеки fstream дл€x чтени€ файлов
#include <stdexcept>//подключение библиотеки stdexcept дл€ работы с исключени€ми
#include "HelpForm.h"//подключение оконной формы HelpForm.h
namespace CourseWork {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace System::IO;
	/// <summary>
	/// —водка дл€ MainForm
	/// </summary>
	public ref class MainForm : public System::Windows::Forms::Form
	{
	public:
		MainForm(int x, int y)//коструктор принимающий несколько целочисленных параметров
		{
			InitializeComponent();//метод InitializeComponent()
			this->Color = y;//инициализируем глобальную переменную Color
			this->Language = x;//инициализируем глобальную переменную Color
		}

	protected:
		/// <summary>
		/// ќсвободить все используемые ресурсы.
		/// </summary>
		~MainForm()
		{
			if (components)
			{
				delete components;
			}
		}
	private: Microsoft::VisualBasic::Compatibility::VB6::FileListBox^ fileListBox1;
	protected:
	private: System::Windows::Forms::MenuStrip^ menuStrip1;
	private: System::Windows::Forms::ToolStripMenuItem^ fileToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ openFileToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ saveToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ settingsToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ backGroundToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ blueToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ greenToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ redToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ defaultToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ languageToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ bYToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ eNToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ rUToolStripMenuItem;


	private: System::Windows::Forms::Label^ label1;
	private: System::Windows::Forms::Label^ label2;
	private: System::Windows::Forms::Button^ button1;
	private: System::Windows::Forms::Button^ button2;
	private: System::Windows::Forms::Button^ button3;
	private: System::Windows::Forms::FolderBrowserDialog^ folderBrowserDialog1;
	private: System::Windows::Forms::Label^ label3;
	private: System::Windows::Forms::OpenFileDialog^ openFileDialog1;
	private: System::Windows::Forms::ToolStripMenuItem^ createFileToolStripMenuItem;
	private: System::Windows::Forms::SaveFileDialog^ saveFileDialog1;
	private: System::Windows::Forms::Button^ button4;
	private: System::Windows::Forms::RichTextBox^ richTextBox1;
	private: System::Windows::Forms::RichTextBox^ richTextBox2;
	private: System::Windows::Forms::TextBox^ textBox1;
	private: System::Windows::Forms::Button^ button5;
	private: System::Windows::Forms::TextBox^ textBox2;
	private: System::Windows::Forms::ToolStripMenuItem^ fontToolStripMenuItem;
	private: System::Windows::Forms::ToolStripMenuItem^ helpToolStripMenuItem;
	private: System::Windows::Forms::Label^ label4;


	private:
		/// <summary>
		/// ќб€зательна€ переменна€ конструктора.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// “ребуемый метод дл€ поддержки конструктора Ч не измен€йте 
		/// содержимое этого метода с помощью редактора кода.
		/// </summary>
		void InitializeComponent(void)
		{
			this->fileListBox1 = (gcnew Microsoft::VisualBasic::Compatibility::VB6::FileListBox());
			this->menuStrip1 = (gcnew System::Windows::Forms::MenuStrip());
			this->fileToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->openFileToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->createFileToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->saveToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->settingsToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->backGroundToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->blueToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->greenToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->redToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->defaultToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->languageToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->bYToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->eNToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->rUToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->fontToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->helpToolStripMenuItem = (gcnew System::Windows::Forms::ToolStripMenuItem());
			this->label1 = (gcnew System::Windows::Forms::Label());
			this->label2 = (gcnew System::Windows::Forms::Label());
			this->button1 = (gcnew System::Windows::Forms::Button());
			this->button2 = (gcnew System::Windows::Forms::Button());
			this->button3 = (gcnew System::Windows::Forms::Button());
			this->folderBrowserDialog1 = (gcnew System::Windows::Forms::FolderBrowserDialog());
			this->label3 = (gcnew System::Windows::Forms::Label());
			this->openFileDialog1 = (gcnew System::Windows::Forms::OpenFileDialog());
			this->saveFileDialog1 = (gcnew System::Windows::Forms::SaveFileDialog());
			this->button4 = (gcnew System::Windows::Forms::Button());
			this->richTextBox1 = (gcnew System::Windows::Forms::RichTextBox());
			this->richTextBox2 = (gcnew System::Windows::Forms::RichTextBox());
			this->textBox1 = (gcnew System::Windows::Forms::TextBox());
			this->button5 = (gcnew System::Windows::Forms::Button());
			this->textBox2 = (gcnew System::Windows::Forms::TextBox());
			this->label4 = (gcnew System::Windows::Forms::Label());
			this->menuStrip1->SuspendLayout();
			this->SuspendLayout();
			// 
			// fileListBox1
			// 
			this->fileListBox1->FormattingEnabled = true;
			this->fileListBox1->Location = System::Drawing::Point(12, 43);
			this->fileListBox1->Name = L"fileListBox1";
			this->fileListBox1->Pattern = L"*.*";
			this->fileListBox1->Size = System::Drawing::Size(120, 446);
			this->fileListBox1->TabIndex = 0;
			this->fileListBox1->SelectedIndexChanged += gcnew System::EventHandler(this, &MainForm::fileListBox1_SelectedIndexChanged);
			// 
			// menuStrip1
			// 
			this->menuStrip1->Items->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(6) {
				this->fileToolStripMenuItem,
					this->createFileToolStripMenuItem, this->saveToolStripMenuItem, this->settingsToolStripMenuItem, this->fontToolStripMenuItem,
					this->helpToolStripMenuItem
			});
			this->menuStrip1->Location = System::Drawing::Point(0, 0);
			this->menuStrip1->Name = L"menuStrip1";
			this->menuStrip1->Size = System::Drawing::Size(785, 24);
			this->menuStrip1->TabIndex = 1;
			this->menuStrip1->Text = L"menuStrip1";
			// 
			// fileToolStripMenuItem
			// 
			this->fileToolStripMenuItem->DropDownItems->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(1) { this->openFileToolStripMenuItem });
			this->fileToolStripMenuItem->Name = L"fileToolStripMenuItem";
			this->fileToolStripMenuItem->Size = System::Drawing::Size(37, 20);
			this->fileToolStripMenuItem->Text = L"File";
			// 
			// openFileToolStripMenuItem
			// 
			this->openFileToolStripMenuItem->Name = L"openFileToolStripMenuItem";
			this->openFileToolStripMenuItem->Size = System::Drawing::Size(121, 22);
			this->openFileToolStripMenuItem->Text = L"OpenFile";
			this->openFileToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::openFileToolStripMenuItem_Click);
			// 
			// createFileToolStripMenuItem
			// 
			this->createFileToolStripMenuItem->Name = L"createFileToolStripMenuItem";
			this->createFileToolStripMenuItem->Size = System::Drawing::Size(74, 20);
			this->createFileToolStripMenuItem->Text = L"Create File";
			this->createFileToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::createFileToolStripMenuItem_Click);
			// 
			// saveToolStripMenuItem
			// 
			this->saveToolStripMenuItem->Name = L"saveToolStripMenuItem";
			this->saveToolStripMenuItem->Size = System::Drawing::Size(43, 20);
			this->saveToolStripMenuItem->Text = L"Save";
			this->saveToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::saveToolStripMenuItem_Click);
			// 
			// settingsToolStripMenuItem
			// 
			this->settingsToolStripMenuItem->DropDownItems->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(2) {
				this->backGroundToolStripMenuItem,
					this->languageToolStripMenuItem
			});
			this->settingsToolStripMenuItem->Name = L"settingsToolStripMenuItem";
			this->settingsToolStripMenuItem->Size = System::Drawing::Size(61, 20);
			this->settingsToolStripMenuItem->Text = L"Settings";
			// 
			// backGroundToolStripMenuItem
			// 
			this->backGroundToolStripMenuItem->DropDownItems->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(4) {
				this->blueToolStripMenuItem,
					this->greenToolStripMenuItem, this->redToolStripMenuItem, this->defaultToolStripMenuItem
			});
			this->backGroundToolStripMenuItem->Name = L"backGroundToolStripMenuItem";
			this->backGroundToolStripMenuItem->Size = System::Drawing::Size(138, 22);
			this->backGroundToolStripMenuItem->Text = L"Background";
			// 
			// blueToolStripMenuItem
			// 
			this->blueToolStripMenuItem->Name = L"blueToolStripMenuItem";
			this->blueToolStripMenuItem->Size = System::Drawing::Size(112, 22);
			this->blueToolStripMenuItem->Text = L"Blue";
			this->blueToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::blueToolStripMenuItem_Click);
			// 
			// greenToolStripMenuItem
			// 
			this->greenToolStripMenuItem->Name = L"greenToolStripMenuItem";
			this->greenToolStripMenuItem->Size = System::Drawing::Size(112, 22);
			this->greenToolStripMenuItem->Text = L"Green";
			this->greenToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::greenToolStripMenuItem_Click);
			// 
			// redToolStripMenuItem
			// 
			this->redToolStripMenuItem->Name = L"redToolStripMenuItem";
			this->redToolStripMenuItem->Size = System::Drawing::Size(112, 22);
			this->redToolStripMenuItem->Text = L"Red";
			this->redToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::redToolStripMenuItem_Click);
			// 
			// defaultToolStripMenuItem
			// 
			this->defaultToolStripMenuItem->Name = L"defaultToolStripMenuItem";
			this->defaultToolStripMenuItem->Size = System::Drawing::Size(112, 22);
			this->defaultToolStripMenuItem->Text = L"Default";
			this->defaultToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::defaultToolStripMenuItem_Click);
			// 
			// languageToolStripMenuItem
			// 
			this->languageToolStripMenuItem->DropDownItems->AddRange(gcnew cli::array< System::Windows::Forms::ToolStripItem^  >(3) {
				this->bYToolStripMenuItem,
					this->eNToolStripMenuItem, this->rUToolStripMenuItem
			});
			this->languageToolStripMenuItem->Name = L"languageToolStripMenuItem";
			this->languageToolStripMenuItem->Size = System::Drawing::Size(138, 22);
			this->languageToolStripMenuItem->Text = L"Language";
			// 
			// bYToolStripMenuItem
			// 
			this->bYToolStripMenuItem->Name = L"bYToolStripMenuItem";
			this->bYToolStripMenuItem->Size = System::Drawing::Size(89, 22);
			this->bYToolStripMenuItem->Text = L"BY";
			this->bYToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::bYToolStripMenuItem_Click);
			// 
			// eNToolStripMenuItem
			// 
			this->eNToolStripMenuItem->Name = L"eNToolStripMenuItem";
			this->eNToolStripMenuItem->Size = System::Drawing::Size(89, 22);
			this->eNToolStripMenuItem->Text = L"EN";
			this->eNToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::eNToolStripMenuItem_Click);
			// 
			// rUToolStripMenuItem
			// 
			this->rUToolStripMenuItem->Name = L"rUToolStripMenuItem";
			this->rUToolStripMenuItem->Size = System::Drawing::Size(89, 22);
			this->rUToolStripMenuItem->Text = L"RU";
			this->rUToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::rUToolStripMenuItem_Click);
			// 
			// fontToolStripMenuItem
			// 
			this->fontToolStripMenuItem->Name = L"fontToolStripMenuItem";
			this->fontToolStripMenuItem->Size = System::Drawing::Size(43, 20);
			this->fontToolStripMenuItem->Text = L"Font";
			this->fontToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::fontToolStripMenuItem_Click);
			// 
			// helpToolStripMenuItem
			// 
			this->helpToolStripMenuItem->Name = L"helpToolStripMenuItem";
			this->helpToolStripMenuItem->Size = System::Drawing::Size(44, 20);
			this->helpToolStripMenuItem->Text = L"Help";
			this->helpToolStripMenuItem->Click += gcnew System::EventHandler(this, &MainForm::helpToolStripMenuItem_Click);
			// 
			// label1
			// 
			this->label1->AutoSize = true;
			this->label1->Location = System::Drawing::Point(238, 27);
			this->label1->Name = L"label1";
			this->label1->Size = System::Drawing::Size(37, 13);
			this->label1->TabIndex = 4;
			this->label1->Text = L"Text 1";
			// 
			// label2
			// 
			this->label2->AutoSize = true;
			this->label2->Location = System::Drawing::Point(509, 27);
			this->label2->Name = L"label2";
			this->label2->Size = System::Drawing::Size(37, 13);
			this->label2->TabIndex = 5;
			this->label2->Text = L"Text 2";
			// 
			// button1
			// 
			this->button1->Location = System::Drawing::Point(13, 516);
			this->button1->Name = L"button1";
			this->button1->Size = System::Drawing::Size(119, 23);
			this->button1->TabIndex = 6;
			this->button1->Text = L"Compare";
			this->button1->UseVisualStyleBackColor = true;
			this->button1->Click += gcnew System::EventHandler(this, &MainForm::button1_Click);
			// 
			// button2
			// 
			this->button2->Location = System::Drawing::Point(227, 498);
			this->button2->Name = L"button2";
			this->button2->Size = System::Drawing::Size(75, 23);
			this->button2->TabIndex = 7;
			this->button2->Text = L"Paste here";
			this->button2->UseVisualStyleBackColor = true;
			this->button2->Click += gcnew System::EventHandler(this, &MainForm::button2_Click);
			// 
			// button3
			// 
			this->button3->Location = System::Drawing::Point(487, 498);
			this->button3->Name = L"button3";
			this->button3->Size = System::Drawing::Size(75, 23);
			this->button3->TabIndex = 8;
			this->button3->Text = L"Paste here";
			this->button3->UseVisualStyleBackColor = true;
			this->button3->Click += gcnew System::EventHandler(this, &MainForm::button3_Click);
			// 
			// label3
			// 
			this->label3->AutoSize = true;
			this->label3->Location = System::Drawing::Point(138, 521);
			this->label3->Name = L"label3";
			this->label3->Size = System::Drawing::Size(0, 13);
			this->label3->TabIndex = 9;
			// 
			// openFileDialog1
			// 
			this->openFileDialog1->FileName = L"openFileDialog1";
			// 
			// button4
			// 
			this->button4->Location = System::Drawing::Point(658, 43);
			this->button4->Name = L"button4";
			this->button4->Size = System::Drawing::Size(102, 23);
			this->button4->TabIndex = 10;
			this->button4->Text = L"Search";
			this->button4->UseVisualStyleBackColor = true;
			this->button4->Click += gcnew System::EventHandler(this, &MainForm::button4_Click);
			// 
			// richTextBox1
			// 
			this->richTextBox1->Location = System::Drawing::Point(141, 43);
			this->richTextBox1->Name = L"richTextBox1";
			this->richTextBox1->Size = System::Drawing::Size(253, 446);
			this->richTextBox1->TabIndex = 11;
			this->richTextBox1->Text = L"";
			// 
			// richTextBox2
			// 
			this->richTextBox2->Location = System::Drawing::Point(400, 43);
			this->richTextBox2->Name = L"richTextBox2";
			this->richTextBox2->Size = System::Drawing::Size(253, 446);
			this->richTextBox2->TabIndex = 12;
			this->richTextBox2->Text = L"";
			// 
			// textBox1
			// 
			this->textBox1->Location = System::Drawing::Point(660, 73);
			this->textBox1->Name = L"textBox1";
			this->textBox1->Size = System::Drawing::Size(100, 20);
			this->textBox1->TabIndex = 13;
			// 
			// button5
			// 
			this->button5->Location = System::Drawing::Point(658, 100);
			this->button5->Name = L"button5";
			this->button5->Size = System::Drawing::Size(102, 23);
			this->button5->TabIndex = 14;
			this->button5->Text = L"Replace";
			this->button5->UseVisualStyleBackColor = true;
			this->button5->Click += gcnew System::EventHandler(this, &MainForm::button5_Click);
			// 
			// textBox2
			// 
			this->textBox2->Location = System::Drawing::Point(658, 130);
			this->textBox2->Name = L"textBox2";
			this->textBox2->Size = System::Drawing::Size(100, 20);
			this->textBox2->TabIndex = 15;
			// 
			// label4
			// 
			this->label4->AutoSize = true;
			this->label4->Location = System::Drawing::Point(13, 27);
			this->label4->Name = L"label4";
			this->label4->Size = System::Drawing::Size(28, 13);
			this->label4->TabIndex = 16;
			this->label4->Text = L"Files";
			// 
			// MainForm
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(785, 551);
			this->Controls->Add(this->label4);
			this->Controls->Add(this->textBox2);
			this->Controls->Add(this->button5);
			this->Controls->Add(this->textBox1);
			this->Controls->Add(this->richTextBox2);
			this->Controls->Add(this->richTextBox1);
			this->Controls->Add(this->button4);
			this->Controls->Add(this->label3);
			this->Controls->Add(this->button3);
			this->Controls->Add(this->button2);
			this->Controls->Add(this->button1);
			this->Controls->Add(this->label2);
			this->Controls->Add(this->label1);
			this->Controls->Add(this->fileListBox1);
			this->Controls->Add(this->menuStrip1);
			this->MainMenuStrip = this->menuStrip1;
			this->Name = L"MainForm";
			this->Text = L"Main";
			this->FormClosing += gcnew System::Windows::Forms::FormClosingEventHandler(this, &MainForm::MainForm_FormClosing);
			this->Load += gcnew System::EventHandler(this, &MainForm::MainForm_Load);
			this->menuStrip1->ResumeLayout(false);
			this->menuStrip1->PerformLayout();
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
		void DeleteTNR(String^& x)//функци€ дл€ удалени€ из строки \t \n \r
		{
			bool point = false;//деклараци€ и инициализаци€ переменной типа bool
			int poi = 0;//деклараци€ и инициализаци€ переменной типа int
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if ((Text[i] == '\t') | (Text[i] == '\n') | (Text[i] == '\r'))//если в данной строке найдено '\t', '\n', '\r'
				{
					if (i > 2)//если i > 2
					{
						if (point != true)//если point не равен true
						{
							poi = i;//присвоение poi значени€ i
							if (Text[i - 1] != '.')
							{
								—orrectedText += ". ";//добавление значени€ ". " в CorrectedText
								point = true;//присвоение point значени€ true
							}
							else//иначе
							{
								—orrectedText += " ";//добавление значени€ " " в CorrectedText
							}
						}
					}
					continue;//переход на следющую итерраци€ в цикле
				}
				—orrectedText += Text[i];//добавление значени€ из Text[i] в CorrectedText
				if (i - poi > 2)//если i-poi > 2
				{
					point = false;//присвоение point значени€ false
				}
				if (Length == i)//если Length = i
				{
					—orrectedText += ".";//добавление значени€ "." в CorrectedText
				}
			}
			DelSpace(x = —orrectedText);//вызов функции DelSpace
		}
		void DelSpace(String^& x)//функци€ дл€ удалени€ двойных пробелов подр€д в строке
		{
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (i != Length - 1)//если i не равен Length - 1 
				{
					if (Text[i] == ' ' & Text[i + 1] == ' ')//если в строке надены символы '  '
					{
						continue;//переход на следющую итерраци€ в цикле
					}
				}
				if (i + 1 == Length)//если i + 1 равен Length 
				{
					if (Text[i] == ' ')//если значение из Text[i] равно ' '
					{
						continue;//переход на следющую итерраци€ в цикле
					}
				}
				—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
				if (i + 1 == Length)//если i+1 = Lenght
				{
					if (Text[i] != '.' & Text[i] != ' ')//если в строке не надены символы '.' и ' '
					{
						—orrectedText += ".";//добавление символа "." в —orrectedText
					}
				}
			}
			DeleteMark (x = —orrectedText);//вызов функции DeleteMark
		}
		void DeleteMark(String^& x)//функци€ дл€ удалени€ знаков препина€ в строке таких как '-',';','"','\','!','?','.'
		{
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (Text[i] == '.' | Text[i] == '?' | Text[i] == '!')//если в строке обнаруженны данные символы '.','?','!'
				{
					—orrectedText += ".";//добавление символа "." в —orrectedText
				}
				else//иначе
				{
					if (Text[i] == '-' | Text[i] == ';' | Text[i] == ':' | Text[i] == '"' | Text[i] == '\'')//если в строке обнаруженны данные символы '-',';',':','"','\''
					{
						continue;//переход на следющую итерраци€ в цикле
					}
					else//иначе
					{
						—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
					}
				}
			}
			DeleteDoublePoint(x = —orrectedText);//вызов функции DeleteDoublePoint
		}
		void DeleteDoublePoint(String^& x)//функци€ дл€ удалени€ двойных точек сто€щих р€дом в строке
		{
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (i != 0)//если i не равен 0
				{
					if (Text[i] == '.' & Text[i - 1] == '.')
					{
						continue;//переход на следющую итерраци€ в цикле
					}
					else//иначе
					{
						—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
					}
				}
				else//иначе
				{
					—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
				}
			}
			DeleteFirstPoint(x = —orrectedText);//вызов функции DeleteFirstPoint
		}
		void DeleteFirstPoint(String^& x)//функци€ дл€ удалени€ точки если строка начинаетс€ с точки
		{
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (i == 0)//если i = 0
				{
					if (Text[i] == '.' & Text[i+1] == ' ')//если в строке найдены символы '. '
					{
						continue;//переход на следющую итерраци€ в цикле
					}
				}
				else//иначе
				{
					—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
				}
			}
			x = —orrectedText;//присвоение значени€ CorrectedText в строку x
		}
		void DeleteDoubleSentences(String^& x)//функци€ дл€ удалени€ двойных пробелов в строке
		{
			String^ Text = gcnew String(x);//деклараци€ и инициализаци€ переменной типа String
			String^ —orrectedText;//деклараци€ переменной типа String
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int с записью длины строки Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (i != Length - 1 & i != 0)//если i не равен Lenght-1 и i не равен 0
				{
					if ((Text[i] == ' ' & Text[i + 1] == '.') | (Text[i - 1] == ' ' & Text[i] == '.'))//если в строке обнарежны св€зки символов
					{
						i++;//увеличение значени€ i на 1
						continue;//переход на следющую итерраци€ в цикле
					}
					else//иначе
					{
						—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
					}
				}
				else//иначе
				{
					—orrectedText += Text[i];//добавление символа Text[i] в —orrectedText
				}

			}
			x = —orrectedText;//присвоение значени€ CorrectedText в строку x

		}
		int Language = 0;//деклараци€ и инициализаци€ глобальной переменной типа int дл€ смены €зыка в программе
		int Color = 0;//деклараци€ и инициализаци€ глобальной переменной типа int дл€ смены цвета фона в программе
		int LengthText = 0;//деклараци€ и инициализаци€ глобальной переменной типа int
		int LengthText2 = 0;//деклараци€ и инициализаци€ глобальной переменной типа int
		int pass = 1;//деклараци€ и инициализаци€ глобальной переменной типа int
		String^ URLF;//деклараци€ глобальной переменной типа String
		String^ Range;//деклараци€ глобальной переменной типа Stirng
	private: System::Void MainForm_Load(System::Object^ sender, System::EventArgs^ e)//метот-обработчик событи€ загрузки оконной формы
	{
		if (Language == 1)//если Language = 1 => установка белорусского €зыка
		{
			this->label1->Text = "“экст 1";//заполение текстом надписи label1 на белорусском €зыке
			this->label2->Text = "“экст 2";//заполение текстом надписи label2 на белорусском €зыке
			this->label4->Text = "‘айлы";//заполение текстом надписи label2 на белорусском €зыке
			this->button1->Text = "ѕараунаць";//заполение текстом кнопки button1 на белорусском €зыке
			this->button2->Text = "”ставiць сюды";//заполение текстом кнопки button2 на белорусском €зыке
			this->button3->Text = "”ставiць сюды";//заполение текстом кнопки button3 на белорусском €зыке
			this->button4->Text = "ѕошук";//заполение текстом кнопки button4 на белорусском €зыке
			this->button5->Text = "«ам€н≥ць";//заполение текстом кнопки button5 на белорусском €зыке
			this->fileToolStripMenuItem->Text = "‘айл";//заполение текстом меню fileToolStripMenuItem на белорусском €зыке
			this->openFileToolStripMenuItem->Text = "јткрыць";//заполение текстом меню openFileToolStripMenuItem на белорусском €зыке
			this->saveToolStripMenuItem->Text = "«ахаваць";//заполение текстом меню saveToolStripMenuItem на белорусском €зыке
			this->settingsToolStripMenuItem->Text = "Ќаладжваньне";//заполение текстом меню settingsToolStripMenuItem на белорусском €зыке
			this->backGroundToolStripMenuItem->Text = "«аднi фон";//заполение текстом меню backGroundToolStripMenuItem на белорусском €зыке
			this->languageToolStripMenuItem->Text = "ћова";//заполение текстом меню languageToolStripMenuItem на белорусском €зыке
			this->rUToolStripMenuItem->Text = "–”—";//заполение текстом меню rUToolStripMenuItem на белорусском €зыке
			this->bYToolStripMenuItem->Text = "Ѕ≈Ћ";//заполение текстом меню bYToolStripMenuItem на белорусском €зыке
			this->eNToolStripMenuItem->Text = "јЌ√Ћ";//заполение текстом меню eNToolStripMenuItem на белорусском €зыке
			this->greenToolStripMenuItem->Text = "«€лЄны";//заполение текстом меню greenToolStripMenuItem на белорусском €зыке
			this->blueToolStripMenuItem->Text = "—iнi";//заполение текстом меню blueToolStripMenuItem на белорусском €зыке
			this->redToolStripMenuItem->Text = "„ырвоны";//заполение текстом меню redToolStripMenuItem на белорусском €зыке
			this->defaultToolStripMenuItem->Text = "—тандартны";//заполение текстом меню defaultToolStripMenuItem на белорусском €зыке
			this->createFileToolStripMenuItem->Text = "—тварьць файл";//заполение текстом меню createFileToolStripMenuItem на белорусском €зыке
			this->fontToolStripMenuItem->Text = "Ўрыфт";//заполение текстом меню fontToolStripMenuItem на белорусском €зыке
			this->helpToolStripMenuItem->Text = "ƒапамога";//заполение текстом меню helpToolStripMenuItem на белорусском €зыке
		}
		if (Language == 2)//если Language = 2 => установка англиского €зыка
		{
			this->label1->Text = "Text 1";//заполение текстом надписи label1 на англиском €зыке
			this->label2->Text = "Text 2";//заполение текстом надписи label2 на англиском €зыке
			this->label4->Text = "Files";//заполение текстом надписи label4 на англиском €зыке
			this->button1->Text = "Compare";//заполение текстом кнопки button1 на англиском €зыке
			this->button2->Text = "Paste here";//заполение текстом кнопки button2 на англиском €зыке
			this->button3->Text = "Paste here";//заполение текстом кнопки button3 на англиском €зыке
			this->button4->Text = "Search";//заполение текстом кнопки button4 на англиском €зыке
			this->button5->Text = "Replace";//заполение текстом кнопки button5 на англиском €зыке
			this->backGroundToolStripMenuItem->Text = "Backgroud";//заполение текстом меню backGroundToolStripMenuItem на белорусском €зыке
			this->fileToolStripMenuItem->Text = L"File";//заполение текстом меню fileToolStripMenuItem на англиском €зыке
			this->openFileToolStripMenuItem->Text = L"Open";//заполение текстом меню openFileToolStripMenuItem на англиском €зыке
			this->saveToolStripMenuItem->Text = "Save";//заполение текстом меню saveToolStripMenuItem на англиском €зыке
			this->settingsToolStripMenuItem->Text = "Settings";//заполение текстом меню settingsToolStripMenuItem на англиском €зыке
			this->rUToolStripMenuItem->Text ="RU";//заполение текстом меню rUToolStripMenuItem на англиском €зыке
			this->bYToolStripMenuItem->Text = "BY";//заполение текстом меню bYToolStripMenuItem на англиском €зыке
			this->eNToolStripMenuItem->Text = "EN";//заполение текстом меню eNToolStripMenuItem на англиском €зыке
			this->greenToolStripMenuItem->Text = "Green";//заполение текстом меню greenToolStripMenuItem на англиском €зыке
			this->blueToolStripMenuItem->Text = "Blue";//заполение текстом меню blueToolStripMenuItem на англиском €зыке
			this->redToolStripMenuItem->Text = "Red";//заполение текстом меню redToolStripMenuItem на англиском €зыке
			this->defaultToolStripMenuItem->Text = "Default";//заполение текстом меню defaultToolStripMenuItem на англиском €зыке
			this->createFileToolStripMenuItem->Text = "Create file";//заполение текстом меню createFileToolStripMenuItem на англиском €зыке
			this->languageToolStripMenuItem->Text = "Language";//заполение текстом меню languageToolStripMenuItem на англиском €зыке
			this->fontToolStripMenuItem->Text = "Font";//заполение текстом меню fontToolStripMenuItem на англиском €зыке
			this->helpToolStripMenuItem->Text = "Help";//заполение текстом меню helpToolStripMenuItem на англиском €зыке
		}
		if (Language == 3)//если Language = 3 => установка русского €зыка
		{
			this->label1->Text = "Tекст 1";//заполение текстом надписи label1 на русском €зыке
			this->label2->Text = "“екст 2";//заполение текстом надписи label2 на русском €зыке
			this->label4->Text = "‘айлы";//заполение текстом надписи label4 на русском €зыке
			this->button1->Text = "—равнить";//заполение текстом кнопки button1 на русском €зыке
			this->button2->Text = "¬ставить сюда";//заполение текстом кнопки button2 на русском €зыке
			this->button3->Text = "¬ставить сюда";//заполение текстом кнопки button3 на русском €зыке
			this->button4->Text = "ѕоиск";//заполение текстом кнопки button4 на русском €зыке
			this->button5->Text = "«аменить";//заполение текстом кнопки button5 на русском €зыке
			this->fileToolStripMenuItem->Text = L"‘айл";//заполение текстом меню fileToolStripMenuItem на англиском €зыке
			this->openFileToolStripMenuItem->Text = L"ќткрыть";//заполение текстом меню openFileToolStripMenuItem на англиском €зыке
			this->saveToolStripMenuItem->Text = "—охранить";//заполение текстом меню saveToolStripMenuItem на англиском €зыке
			this->backGroundToolStripMenuItem->Text = "«адний фон";//заполение текстом меню backGroundToolStripMenuItem на англиском €зыке
			this->settingsToolStripMenuItem->Text = "Ќастройки";//заполение текстом меню settingsToolStripMenuItem на англиском €зыке
			this->rUToolStripMenuItem->Text = L"–”—";//заполение текстом меню rUToolStripMenuItem на англиском €зыке
			this->bYToolStripMenuItem->Text = L"Ѕ≈Ћ";//заполение текстом меню bYToolStripMenuItem на англиском €зыке
			this->eNToolStripMenuItem->Text = L"јЌ√Ћ";//заполение текстом меню eNToolStripMenuItem на англиском €зыке
			this->greenToolStripMenuItem->Text = L"«еленый";//заполение текстом меню greenToolStripMenuItem на англиском €зыке
			this->blueToolStripMenuItem->Text = L"—иний";//заполение текстом меню blueToolStripMenuItem на англиском €зыке
			this->redToolStripMenuItem->Text = L" расный";//заполение текстом меню redToolStripMenuItem на англиском €зыке
			this->defaultToolStripMenuItem->Text = L"—тандартный";//заполение текстом меню defaultToolStripMenuItem на англиском €зыке
			this->createFileToolStripMenuItem->Text = "—оздать файл";//заполение текстом меню createFileToolStripMenuItem на англиском €зыке
			this->languageToolStripMenuItem->Text = "язык";//заполение текстом меню languageToolStripMenuItem на англиском €зыке
			this->fontToolStripMenuItem->Text = "Ўрифт";//заполение текстом меню fontToolStripMenuItem на англиском €зыке
			this->helpToolStripMenuItem->Text = "ѕомощь";//заполение текстом меню helpToolStripMenuItem на англиском €зыке
		}
		if (Color == 0)//если Color = 0 => установка фонового цвета " нопочный серый"
		{
			this->BackColor = SystemColors::ButtonFace;//назначить фоновым цветом Ё“ќ… оконной формы ситемный цвет "кнопочный серый" 
			this->label1->ForeColor = Color::Black;//назначить цвет надписи Label1 "„ерный цвет"
			this->label2->ForeColor = Color::Black;//назначить цвет надписи Label2 "„ерный цвет"
			this->label4->ForeColor = Color::Black;//назначить цвет надписи Label4 "„ерный цвет"
		}
		if (Color == 1)//если Color = 1 => установка фонового цвета "—иний"
		{
			this->BackColor = Color::Blue;//назначить фоновым цветом Ё“ќ… оконной формы цвет "—иний"
			this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
			this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
			this->label4->ForeColor = Color::White;//назначить цвет надписи Label4 "Ѕелый"
		}
		if (Color == 2)//если Color = 2 => установка фонового цвета "«еленый"
		{
			this->BackColor = Color::Green;//назначить фоновым цветом Ё“ќ… оконной формы цвет "«еленый"
			this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
			this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
			this->label4->ForeColor = Color::White;//назначить цвет надписи Label4 "Ѕелый"
		}
		if (Color == 3)//если Color = 3 => установка фонового цвета " расный"
		{
			this->BackColor = Color::Red;//назначить фоновым цветом Ё“ќ… оконной формы цвет " расный"
			this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
			this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
			this->label4->ForeColor = Color::White;//назначить цвет надписи Label4 "Ѕелый"
		}
	}
	private: System::Void openFileToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на saveToolStripMenuItem, в котором происходит загрузка файлов в fileListBox1
	{
		fileListBox1->Pattern = "*.txt";//фильтаци€ типов файлов в fileListBox1
		folderBrowserDialog1->ShowDialog();//открыть окно просмотра папок
		fileListBox1->FileName = folderBrowserDialog1->SelectedPath;//отображение файлов только из папки выбраноой в folderBrowserDialog1
	}
	private: System::Void saveToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на saveToolStripMenuItem, в котором происходит сохранение текста из richTextBox1 в файл
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			String^ Text = this->richTextBox1->Text;//деклараци€ и инициализаци€ переменной типа String текстом из richTextBox1
			if (Text->Length == 0)//если строка пуста€
			{
				throw 1;//вызов исключени€ типа int
			}
			openFileDialog1->Filter = "Text Files|*.txt";//фильтраци€ файлов в openFileDialog1
			if (openFileDialog1->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				StreamWriter^ sw = gcnew StreamWriter(openFileDialog1->FileName);//создание потока дл€ записи информации в выбранное место 
				String^ SaveText;//деклараци€ переменной типа String
				String^ proposal;//деклараци€ переменной типа String
				int Length = 0;//деклараци€ и инициализаци€ переменной типа String
				Length = Text->Length;//присвоение lenght значени€ длина строки Text
				for (int i = 0; i < Length; i++)//поиск символа в строке 
				{
					if (Text[i] == '_')//красна€ строка
					{
						SaveText += "\n\t";//добаление перехода на новую строку и табулировани€
					}
					else//иначе
					{
						if (Text[i] == '&')//маркированный список
						{
							SaveText += "\n\t- ";//добаление перехода на новую строку, табулировани€ и символа "-"
						}
						else//иначе
						{
							SaveText += Text[i];//добавление символа Text[i] в SaveText
						}
					}
				}
				sw->WriteLine(SaveText);//запись строки в Data.txt
				sw->Close();//закрытие потока sw
				if (Language == 1)//если Language = 1 => MessageBox  белорусском €зыке
				{
					MessageBox::Show("‘айл захаваны в : " + openFileDialog1->FileName, "«ахаваны");//показать сообщение с информацией
				}
				if (Language == 2)//если Language = 1 => MessageBox англиском €зыка
				{
					MessageBox::Show("File save in : " + openFileDialog1->FileName, "Save");//показать сообщение с информацией
				}
				if (Language == 3)//если Language = 1 => MessageBox русском €зыка
				{
					MessageBox::Show("‘айл сохраненен в " +openFileDialog1->FileName, "—охранено");//показать сообщение с информацией
				}
			}
		}
		catch (int)//отлов ошибки типа int
		{
			if (Language == 1)//если Language = 1 => MessageBox  белорусском €зыке
			{
				MessageBox::Show("“екстовое поле пустое, ув€дзiце што-небудзь", "ѕамылка");//показать сообщение с информацией
			}
			if (Language == 2)//если Language = 1 => MessageBox англиском €зыка
			{
				MessageBox::Show("Text field is empty, enter something", "Error");//показать сообщение с информацией
			}
			if (Language == 3)//если Language = 1 => MessageBox русском €зыка
			{
				MessageBox::Show("“ектвовое поле пустое, введите что-нибудь", "ќшибка");//показать сообщение с информацией
			}
		}
	}
	private: System::Void button1_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на button1, в котором происходит выполнение процесса сравнени€ текста из richTextBox1 и richTextBox2
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			String^ Sourse = richTextBox1->Text;//деклараци€ и инициализаци€ текстом из richTextBox1 переменной типа String 
			String^ paste = richTextBox2->Text;//деклараци€ и инициализаци€ текстом из richTextBox2 переменной типа String 
			if (Sourse->Length == 0 | paste->Length == 0)//если строки пустые 
			{
				throw 1;//вызов исключени€ типа int
			}
			DeleteTNR(Sourse);//вызов функции DeleteTNR дл€ строки Sourse
			DeleteTNR(paste);//вызов функции DeleteTNR дл€ строки paste
			DelSpace(Sourse);//вызов функции DelSpace дл€ строки Sourse
			DelSpace(paste);//вызов функции DelSpace дл€ строки paste
			DeleteDoubleSentences(Sourse);//вызов функции DeleteDoubleSentences дл€ строки Sourse
			DeleteDoubleSentences(paste);//вызов функции DeleteDoubleSentences дл€ строки paste
			double type;//деклараци€ переменной типа double
			int fp = 0;//деклараци€ с инициализацией переменной типа int
			int fp2 = 0;//деклараци€ с инициализацией переменной типа int
			int sentence = 0;//деклараци€ с инициализацией переменной типа int
			int sp, sp2;//деклараци€ переменной типа int
			int sim = 0;//деклараци€ с инициализацией переменной типа int
			int Length = Sourse->Length;//деклараци€ переменной с присвоение длины строки Sourse
			int Length2 = paste->Length;//деклараци€ переменной с присвоение длины строки paste
			for (int i = 0; i <= Length; i++)//цикл дл€ нахождени€ симоволов в строке 
			{
				if (i == Length)//если i = Lenght
				{
					break;//выход из цикла
				}
				if (Sourse[i] == '.' | Sourse[i] == '?' | Sourse[i] == '!')//если в строке встретились данные символы '.','?','!'
				{
					sentence++;//увеличение счетчика предложений
					sp = i + 1;//переменна€ значение которой индекс, которой укакзывает на расположение точки в строке
					String^ sent;//деклараци€ переменной типа String 
					for (int j = fp; j < sp; j++)//цикл дл€ записи предложени€ в строку
					{
						sent += Sourse[j];//добавление символа Sourse[j] в sent
					}
					for (int w = 0; w < Length2; w++)//цикл дл€ нахождени€ симоволов в строке 
					{
						if (paste[w] == '.' | paste[w] == '?' | paste[w] == '!')//если в строке найдены символы '.','?','!'
						{
							sp2 = w + 1;//переменна€ значение которой индекс, которой укакзывает на расположение точки в строке
							String^ sent2;//деклараци€ переменной типа String 
							for (int e = fp2; e < sp2; e++)//цикл дл€ записи предложени€ в строку
							{
								sent2 += paste[e];//добавление символа paste[e] в sent2
							}
							sent = sent->ToLower();//уменьшение регистра строки sent 
							sent2 = sent2->ToLower();//уменьшение регистра строки sent 2
							if (sent == sent2)//если sent = sent
							{
								sim += 1;//увеличение счетчика похожих предложений
							}
							fp2 = sp2 + 1;//присвоение значений переменной fp2 значений sp2 + 1
						}
					}
					fp = sp + 1;//присвоение значений переменной fp значений sp + 1
					fp2 = 0;//обнуление переменной
				}
			}
			if (sentence == 0)//если кол-во предложений равно 0
			{
				throw 0.1;//вызов исключени€ типа double
			}
			double x = double(sim) / double(sentence) * 100;//вычисление процента сходства текстов x = sim/sentence*100
			if (x > 100)//если x > 100
			{
				x = 100;//присвоение значений переменной x
			}
			if (x > 50)//если x < 50
			{
				this->label3->ForeColor = Color::Red;//изменение цвета шрифта на красный в label3 
				this->label3->Text = x.ToString() + "%";//присвоение значенией
			}
			else//иначе
			{
				this->label3->ForeColor = Color::Green;//изменение цвета шрифта на зеленый в label3 
				this->label3->Text = x.ToString() + "%";//изменение цвета шрифта в label3 
			}
		}
		catch (int)//отлов ошибки типа int
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("“екстовое поле пустое, ув€дзiце што-небудзь","ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("Text field is empty, enter something", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на руссоком €зыке
			{
				MessageBox::Show("“ектвовое поле пустое, введите что-нибудь","ќшибка");//показать сообщение с описание ошибки
			}
		}
		catch (double)//отлов ошибки типа double
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("“экставае поле не мае цэлай прапановы", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("Text field does not have a whole sentence", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на руссоком €зыке
			{
				MessageBox::Show("“екстовое поле не имеет целого предложени€", "ќшибка");//показать сообщение с описание ошибки
			}
		}
	}
	private: System::Void button2_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на button2, в котором происходит перенос текста из txt файла в richTextBox1
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			StreamReader^ read = gcnew StreamReader(URLF);//создание потока read дл€ чтени€ дл€ файла, путь которого расположен в сроке URLF
			richTextBox1->Text = read->ReadToEnd();//присвоение значений в richTextBox2 из файла
			String^ Text = richTextBox1->Text;//деклараци€ и инициализаци€ переменной типа String текстом из richTextBox1
			String^ Sentensens;//деклараци€ переменной типа String
			read->Close();//закрытие потока read
			int counter = 0;//деклараци€ и инициализаци€ переменной типа int
			int counterText = 0;//деклараци€ и инициализаци€ переменной типа int
			int f = 0;//деклараци€ и инициализаци€ переменной типа int
			int l = 0;//деклараци€ и инициализаци€ переменной типа int
			int Length = Text->Length;//деклараци€ и инициализаци€ переменной типа int значением длины Text
			for (int i = 0; i < Length; i++)//цикл дл€ нахождени€ симоволов в строке
			{
				if (Text[i] == '.')//если значение из Text[i] равен '.'
				{
					counter++;//увеличение счетчика на 1
					l = i;//присвоение значений из i в l
					if (counter == 1)//если счетчик равен 1
					{
						for (int w = 0; w < l + 1; w++)//цикл дл€ заполнени€ строки
						{
							Sentensens += Text[w];//добавление символа Text[w] в Sentensens
						}
					}
				}
			}
			LengthText = Length;//присвоение значений Length в LengthText
		}
		catch (System::ArgumentNullException^ e)//отлов ошибки типа ArgumentNullException
		{
			if (Language == 1)//показать сообщение с описание ошибки
			{
				MessageBox::Show("¬ы не выбралi файл дл€ адкрыцц€", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("You have not selected file to open", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на руссоком €зыке
			{
				MessageBox::Show("¬ы не выбрали файл дл€ открыти€", "ќшибка");//показать сообщение с описание ошибки
			}
		}
	}
	private: System::Void button3_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на button3, в котором происходит перенос текста из txt файла в richTextBox1 
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			StreamReader^ read = gcnew StreamReader(URLF);//создание потока read дл€ чтени€ дл€ файла, путь которого расположен в сроке URLF
			richTextBox2->Text = read->ReadToEnd();//присвоение значений в richTextBox2 из файла
			read->Close();//закрытие потока read
			String^ Text = richTextBox2->Text;//деклараци€ и инициализаци€ переменной типа String текстом из richTextBox2
		}
		catch (System::ArgumentNullException^ e)//отлов ошибки типа ArgumentNullException
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("¬ы не выбралi файл дл€ адкрыцц€", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("You have not selected file to open", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на руссоком €зыке
			{
				MessageBox::Show("¬ы не выбрали файл дл€ открыти€", "ќшибка");//показать сообщение с описание ошибки
			}
		}
	}
	private: System::Void blueToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на blueToolStripMenuItem , в котором происходит измение цвета заднего фона на синий цвет
	{
		this->BackColor = Color::Blue;//назначить фоновым цветом Ё“ќ… оконной формы цвет "—иний"
		this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
		this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
		Color = 1;//присвоение значений в Color 
	}
	private: System::Void greenToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на greenToolStripMenuItem , в котором происходит измение цвета заднего фона на зеленый цвет 
	{
		this->BackColor = Color::Green;//назначить фоновым цветом Ё“ќ… оконной формы цвет "«еленый"
		this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
		this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
		Color = 2;//присвоение значений в Color 
	}
	private: System::Void redToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на redToolStripMenuItem , в котором происходит измение цвета заднего фона на красный цвет 
	{
		this->BackColor = Color::Red;//назначить фоновым цветом Ё“ќ… оконной формы цвет " расный"
		this->label1->ForeColor = Color::White;//назначить цвет надписи Label1 "Ѕелый"
		this->label2->ForeColor = Color::White;//назначить цвет надписи Label2 "Ѕелый"
		Color = 3;//присвоение значений в Color 
	}
	private: System::Void defaultToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на defaultToolStripMenuItem , в котором происходит измение цвета заднего фона стандартный цвет
	{
		this->BackColor = SystemColors::ButtonFace;//назначить фоновым цветом Ё“ќ… оконной формы ситемный цвет "кнопочный серый" 
		this->label1->ForeColor = Color::Black;//назначить цвет надписи Label1 "„ерный цвет"
		this->label2->ForeColor = Color::Black;//назначить цвет надписи Label2 "„ерный цвет"
		Color = 0;//присвоение значений в Color 
	}
	private: System::Void bYToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e) //обработчик нажати€ на bYToolStripMenuItem , в котором происходит измение €зыка на белорусский 
	{
		Language = 1;//присвоение значений в Language
		this->label1->Text = "“экст 1";//заполение текстом надписи label1 на белорусском €зыке
		this->label2->Text = "“экст 2";//заполение текстом надписи label2 на белорусском €зыке
		this->label4->Text = "‘айлы";//заполение текстом надписи label2 на белорусском €зыке
		this->button1->Text = "ѕараунаць";//заполение текстом кнопки button1 на белорусском €зыке
		this->button2->Text = "”ставiць сюды";//заполение текстом кнопки button2 на белорусском €зыке
		this->button3->Text = "”ставiць сюды";//заполение текстом кнопки button3 на белорусском €зыке
		this->button4->Text = "ѕошук";//заполение текстом кнопки button4 на белорусском €зыке
		this->button5->Text = "«ам€н≥ць";//заполение текстом кнопки button5 на белорусском €зыке
		this->fileToolStripMenuItem->Text = "‘айл";//заполение текстом меню fileToolStripMenuItem на белорусском €зыке
		this->openFileToolStripMenuItem->Text = "јткрыць";//заполение текстом меню openFileToolStripMenuItem на белорусском €зыке
		this->saveToolStripMenuItem->Text = "«ахаваць";//заполение текстом меню saveToolStripMenuItem на белорусском €зыке
		this->settingsToolStripMenuItem->Text = "Ќаладжваньне";//заполение текстом меню settingsToolStripMenuItem на белорусском €зыке
		this->backGroundToolStripMenuItem->Text = "«аднi фон";//заполение текстом меню backGroundToolStripMenuItem на белорусском €зыке
		this->languageToolStripMenuItem->Text = "ћова";//заполение текстом меню languageToolStripMenuItem на белорусском €зыке
		this->rUToolStripMenuItem->Text = "–”—";//заполение текстом меню rUToolStripMenuItem на белорусском €зыке
		this->bYToolStripMenuItem->Text = "Ѕ≈Ћ";//заполение текстом меню bYToolStripMenuItem на белорусском €зыке
		this->eNToolStripMenuItem->Text = "јЌ√Ћ";//заполение текстом меню eNToolStripMenuItem на белорусском €зыке
		this->greenToolStripMenuItem->Text = "«€лЄны";//заполение текстом меню greenToolStripMenuItem на белорусском €зыке
		this->blueToolStripMenuItem->Text = "—iнi";//заполение текстом меню blueToolStripMenuItem на белорусском €зыке
		this->redToolStripMenuItem->Text = "„ырвоны";//заполение текстом меню redToolStripMenuItem на белорусском €зыке
		this->defaultToolStripMenuItem->Text = "—тандартны";//заполение текстом меню defaultToolStripMenuItem на белорусском €зыке
		this->createFileToolStripMenuItem->Text = "—тварьць файл";//заполение текстом меню createFileToolStripMenuItem на белорусском €зыке
		this->fontToolStripMenuItem->Text = "Ўрыфт";//заполение текстом меню fontToolStripMenuItem на белорусском €зыке
		this->helpToolStripMenuItem->Text = "ƒапамога";//заполение текстом меню helpToolStripMenuItem на белорусском €зыке
	}
	private: System::Void eNToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e) // обработчик нажати€ на eNToolStripMenuItem, в котором происходит измение €зыка на англиский
	{
		Language = 2;//присвоение значений в Language
		this->label1->Text = "Text 1";//заполение текстом надписи label1 на англиском €зыке
		this->label2->Text = "Text 2";//заполение текстом надписи label2 на англиском €зыке
		this->label4->Text = "Files";//заполение текстом надписи label4 на англиском €зыке
		this->button1->Text = "Compare";//заполение текстом кнопки button1 на англиском €зыке
		this->button2->Text = "Paste here";//заполение текстом кнопки button2 на англиском €зыке
		this->button3->Text = "Paste here";//заполение текстом кнопки button3 на англиском €зыке
		this->button4->Text = "Search";//заполение текстом кнопки button4 на англиском €зыке
		this->button5->Text = "Replace";//заполение текстом кнопки button5 на англиском €зыке
		this->backGroundToolStripMenuItem->Text = "Backgroud";//заполение текстом меню backGroundToolStripMenuItem на белорусском €зыке
		this->fileToolStripMenuItem->Text = L"File";//заполение текстом меню fileToolStripMenuItem на англиском €зыке
		this->openFileToolStripMenuItem->Text = L"Open";//заполение текстом меню openFileToolStripMenuItem на англиском €зыке
		this->saveToolStripMenuItem->Text = "Save";//заполение текстом меню saveToolStripMenuItem на англиском €зыке
		this->settingsToolStripMenuItem->Text = "Settings";//заполение текстом меню settingsToolStripMenuItem на англиском €зыке
		this->rUToolStripMenuItem->Text = "RU";//заполение текстом меню rUToolStripMenuItem на англиском €зыке
		this->bYToolStripMenuItem->Text = "BY";//заполение текстом меню bYToolStripMenuItem на англиском €зыке
		this->eNToolStripMenuItem->Text = "EN";//заполение текстом меню eNToolStripMenuItem на англиском €зыке
		this->greenToolStripMenuItem->Text = "Green";//заполение текстом меню greenToolStripMenuItem на англиском €зыке
		this->blueToolStripMenuItem->Text = "Blue";//заполение текстом меню blueToolStripMenuItem на англиском €зыке
		this->redToolStripMenuItem->Text = "Red";//заполение текстом меню redToolStripMenuItem на англиском €зыке
		this->defaultToolStripMenuItem->Text = "Default";//заполение текстом меню defaultToolStripMenuItem на англиском €зыке
		this->createFileToolStripMenuItem->Text = "Create file";//заполение текстом меню createFileToolStripMenuItem на англиском €зыке
		this->languageToolStripMenuItem->Text = "Language";//заполение текстом меню languageToolStripMenuItem на англиском €зыке
		this->fontToolStripMenuItem->Text = "Font";//заполение текстом меню fontToolStripMenuItem на англиском €зыке
		this->helpToolStripMenuItem->Text = "Help";//заполение текстом меню helpToolStripMenuItem на англиском €зыке
	}
	private: System::Void rUToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)  // обработчик нажати€ на rUToolStripMenuItem, в котором происходит измение €зыка на русский
	{
		Language = 3;//присвоение значений в Language
		this->label1->Text = "Tекст 1";//заполение текстом надписи label1 на русском €зыке
		this->label2->Text = "“екст 2";//заполение текстом надписи label2 на русском €зыке
		this->label4->Text = "‘айлы";//заполение текстом надписи label4 на русском €зыке
		this->button1->Text = "—равнить";//заполение текстом кнопки button1 на русском €зыке
		this->button2->Text = "¬ставить сюда";//заполение текстом кнопки button2 на русском €зыке
		this->button3->Text = "¬ставить сюда";//заполение текстом кнопки button3 на русском €зыке
		this->button4->Text = "ѕоиск";//заполение текстом кнопки button4 на русском €зыке
		this->button5->Text = "«аменить";//заполение текстом кнопки button5 на русском €зыке
		this->fileToolStripMenuItem->Text = L"‘айл";//заполение текстом меню fileToolStripMenuItem на англиском €зыке
		this->openFileToolStripMenuItem->Text = L"ќткрыть";//заполение текстом меню openFileToolStripMenuItem на англиском €зыке
		this->saveToolStripMenuItem->Text = "—охранить";//заполение текстом меню saveToolStripMenuItem на англиском €зыке
		this->backGroundToolStripMenuItem->Text = "«адний фон";//заполение текстом меню backGroundToolStripMenuItem на англиском €зыке
		this->settingsToolStripMenuItem->Text = "Ќастройки";//заполение текстом меню settingsToolStripMenuItem на англиском €зыке
		this->rUToolStripMenuItem->Text = L"–”—";//заполение текстом меню rUToolStripMenuItem на англиском €зыке
		this->bYToolStripMenuItem->Text = L"Ѕ≈Ћ";//заполение текстом меню bYToolStripMenuItem на англиском €зыке
		this->eNToolStripMenuItem->Text = L"јЌ√Ћ";//заполение текстом меню eNToolStripMenuItem на англиском €зыке
		this->greenToolStripMenuItem->Text = L"«еленый";//заполение текстом меню greenToolStripMenuItem на англиском €зыке
		this->blueToolStripMenuItem->Text = L"—иний";//заполение текстом меню blueToolStripMenuItem на англиском €зыке
		this->redToolStripMenuItem->Text = L" расный";//заполение текстом меню redToolStripMenuItem на англиском €зыке
		this->defaultToolStripMenuItem->Text = L"—тандартный";//заполение текстом меню defaultToolStripMenuItem на англиском €зыке
		this->createFileToolStripMenuItem->Text = "—оздать файл";//заполение текстом меню createFileToolStripMenuItem на англиском €зыке
		this->languageToolStripMenuItem->Text = "язык";//заполение текстом меню languageToolStripMenuItem на англиском €зыке
		this->fontToolStripMenuItem->Text = "Ўрифт";//заполение текстом меню fontToolStripMenuItem на англиском €зыке
		this->helpToolStripMenuItem->Text = "ѕомощь";//заполение текстом меню helpToolStripMenuItem на англиском €зыке
	}
	private: System::Void fileListBox1_SelectedIndexChanged(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на fileListBox1, в котором происходит выбор файла дл€ открыти€
	{
		String^ URL = folderBrowserDialog1->SelectedPath + "\\" + fileListBox1->SelectedItem->ToString();//деклараци€ и инициализаци€ переменной String адресом файла
		URLF = gcnew String(URL);//инициализаци€ глобальной переменной URLF 
		if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
		{
			MessageBox::Show("¬ы выбралi файл " + URLF, "‘айл");//показать сообщение с описанием выбраноого файла
		}
		if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
		{
			MessageBox::Show("You selected file " + URLF, "File");//показать сообщение с описание выбраноого файла
		}
		if (Language == 3)//если Language = 3 => MessageBox на русском €зыке
		{
			MessageBox::Show("¬ы выбрали файл " + URLF, "‘айл");//показать сообщение с описание выбраноого файла
		}
	}
	private: System::Void MainForm_FormClosing(System::Object^ sender, System::Windows::Forms::FormClosingEventArgs^ e)//обработчик нажати€ на кнопку закрыти€ приложени€
	{
		Application::Exit();//закрытие приложени€
	}
	private: System::Void createFileToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e) //обработчик нажати€ на createFileToolStripMenuItem, в котором происходит создание txt файла 
	{
		saveFileDialog1->Filter = "Text Files|*.txt";//фильтаци€ типов файлов
		if (saveFileDialog1->ShowDialog() == System::Windows::Forms::DialogResult::OK)//выбор расположени€ файла на устройстве
		{
			StreamWriter^ sw = gcnew StreamWriter(saveFileDialog1->FileName);//создание потока записи sw
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("¬ы ставрылi новы фа…л у " + saveFileDialog1->FileName, "—твораны файл");//показать сообщение с описанием пути
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("You create new file in " + saveFileDialog1->FileName, "Create file");//показать сообщение с описанием пути
			}
			if (Language == 3)//если Language = 3 => MessageBox на русском €зыке
			{
				MessageBox::Show("¬ы создали новый файл в " + saveFileDialog1->FileName, "—оздан файл");//показать сообщение с описанием пути
			}
			sw->Write("");//запись пробела в текстовый документ
			sw->Close();//закрытие потока sw
		}
	}
	private: System::Void button4_Click(System::Object^ sender, System::EventArgs^ e) //обработчик нажати€ на button4, в котором происходит поиск слов в тексте
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			if (textBox1->Text == "")//если textBox1 пуст
			{
				throw 1;//вызов исключени€
			}
			int index = 0;//деклараци€ и инициализаци€ переменной типа int
			String^ temp = richTextBox1->Text;//деклараци€ переменной типа String 
			richTextBox1->Text = "";//очищение richTextBox1
			richTextBox1->Text = temp;//деклараци€ переменной типа String
			while (index < richTextBox1->Text->LastIndexOf(textBox1->Text))//пока index меньше длины richTextBox2
			{
				richTextBox1->Find(textBox1->Text, index, richTextBox1->Text->Length, RichTextBoxFinds::None);//использование метода Find
				richTextBox1->SelectionBackColor = Color::Red;//изменение цвета заднего фона в найденом слове
				index = richTextBox1->Text->IndexOf(textBox1->Text, index) + 1;//деклараци€ переменной типа int
			}
			int index2 = 0;//деклараци€ и инициализаци€ переменной типа int
			String^ temp2 = richTextBox2->Text;//деклараци€ переменной типа String 
			richTextBox2->Text = "";//очищение richTextBox1
			richTextBox2->Text = temp2;//деклараци€ переменной типа String
			while (index2 < richTextBox2->Text->LastIndexOf(textBox1->Text))//пока index2 меньше длины richTextBox2
			{
				richTextBox2->Find(textBox1->Text, index2, richTextBox2->Text->Length, RichTextBoxFinds::None);//использование метода Find
				richTextBox2->SelectionBackColor = Color::Red;//изменение цвета заднего фона в найденом слове
				index2 = richTextBox2->Text->IndexOf(textBox1->Text, index2) + 1;//деклараци€ переменной типа int
			}
		}
		catch (int)//отлов ошибки типа int 
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("–адок пуст", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("String is empty", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на русском €зыке
			{
				MessageBox::Show("—трока пуста€", "ќшибка");//показать сообщение с описание ошибки
			}
		}
	}
	private: System::Void button5_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на button5, в котором происходит замена слова в тексте
	{
		try//начало области кода, в которой отслеживаютс€ ошибки
		{
			if (textBox1->Text == "" || textBox2->Text == "")//провекрка если textBox пуст
			{
				throw 1;//вызов исключени€
			}
			String^ Find = textBox1->Text;//деклараци€ и инициализаци€ переменной типа String текстом из textBox1
			String^ Rep = textBox2->Text;//деклараци€ и инициализаци€ переменной типа String текстом из textBox2
			if ((Find->Length) * 2 == Rep->Length)//проверка на размер слова
			{
				String^ Part1;//деклараци€ переменной типа String
				String^ Part2;//деклараци€ переменной типа String
				for (int i = 0; i < Rep->Length / 2; i++)//цикл дл€ записи значений в Part1
				{
					Part1 += Rep[i];//добавление символа из Rep[i] в Part1
				}
				for (int i = Rep->Length / 2; i < Rep->Length; i++)//цикл дл€ записи значений в Part2
				{
					Part2 += Rep[i];//добавление символа из Rep[i] в Part2
				}
				if (Part1 == Part2)//если Part1 = Part2
				{
					throw std::logic_error("");//вызов исключени€ underflow_error
				}
			}
			int index = 0;//деклараци€ и инициализаци€ переменной типа int
			String^ temp = richTextBox1->Text;//деклараци€ переменной типа String 
			richTextBox1->Text = "";//очищение richTextBox1
			richTextBox1->Text = temp;//деклараци€ переменной типа String
			while (index < richTextBox1->Text->LastIndexOf(textBox1->Text))//пока index меньше длины richTextBox2
			{
				richTextBox1->Find(textBox1->Text, index, richTextBox1->Text->Length, RichTextBoxFinds::None);//использование метода Find
				richTextBox1->SelectionBackColor = Color::Red;//изменение цвета заднего фона в найденом слове
				index = richTextBox1->Text->IndexOf(textBox1->Text, index) + 1;//деклараци€ переменной типа int
				richTextBox1->Focus();//установка фокуса ввода
				richTextBox1->SelectedText = textBox2->Text;//запись текста из textBox2 в richTextBox1
			}
		}
		catch (int)//отлов ошибки типа int 
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("–адок пуст", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("String is empty", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на русском €зыке
			{
				MessageBox::Show("—трока пуста€", "ќшибка");//показать сообщение с описание ошибки
			}
		}
		catch (std::logic_error e)//отлов ошибки типа logic_error
		{
			if (Language == 1)//если Language = 1 => MessageBox на белорусском €зыке
			{
				MessageBox::Show("¬ы€Ґлена памылка", "ѕамылка");//показать сообщение с описание ошибки
			}
			if (Language == 2)//если Language = 2 => MessageBox на англиском €зыке
			{
				MessageBox::Show("Error detected", "Error");//показать сообщение с описание ошибки
			}
			if (Language == 3)//если Language = 3 => MessageBox на русском €зыке
			{
				MessageBox::Show("ќбнаружена ошибка", "ќшибка");//показать сообщение с описание ошибки
			}
		}
	}
	private: System::Void fontToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик нажати€ на fontToolStripMenuItem, в котором происходит выбор шрифта текста 
	{
		FontDialog^ fd = gcnew FontDialog;//деклараци€ окна FondDialog
		if (fd->ShowDialog() == System::Windows::Forms::DialogResult::OK)//окртытие окна с выбором шрифта
		{
			richTextBox1->Font = fd->Font;//использование шрифта на richTextBox1
			richTextBox2->Font = fd->Font;//использование шрифта на richTextBox2
		}
	}
	private: System::Void helpToolStripMenuItem_Click(System::Object^ sender, System::EventArgs^ e)//обработчик создани€ оконной формы
	{
		HelpForm^ form = gcnew HelpForm(Language, Color);;//создать новую оконную форму типа класса MainForm конструктором с ;//создать новую оконную форму типа класса MainForm конструктором с вещественным параметромпараметром
		form->Show();//показать форму
	}
};
}
